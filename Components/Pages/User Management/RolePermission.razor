@page "/role-permission"
@attribute [Authorize]
@layout MainLayout
@inject IDbContextFactory<EMSContext> DbFactory
@inject ToastService ToastService
@inject MenuService MenuService
@rendermode InteractiveServer

<PageTitle>Role Permission</PageTitle>

<section class="content inner-tbl pt-5 pb-3">
   <div class="container-fluid p-0">
        <div class="row">
            <div class=" col-12 col-lg-7">
                <div class="card">
                    <div class="content-header">
                        <div class="container-fluid">
                            <div class="row align-items-center">
                                <div class="col-12 col-md-6 col-lg-6">
                                    <div class="main-title text-center text-md-left text-lg-left">
                                        <h2>Role Permission</h2>
                                    </div>
                                </div>

                                <div class="col-12 col-md-6 col-lg-6 text-center text-md-right text-lg-right">
                                    <a href="#!" class="btn btn-secondary" id="btnClear" type="button">Clear</a>
                                    <a href="#!" class="btn btn-primary ml-2" id="btnSaveRoleMapping" type="button">Save</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row justify-content-center">
                            <div class="col-4">
                                <div class="input-group cus-select mb-4">
                                    <select class="form-control" id="DdlAllRole" name="DdlAllRole">
                                        <option value="">-- Select Role --</option>
                                        @foreach (var role in Roleslist)
                                        {
                                            <option value="@role.RoleID">@role.RoleName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row custom-multi-chkbox" id="menuTree">
                            @if (menuModels.Count == 0)
                            {
                                <Loader />
                            }
                            else
                            {
                                <div class="row">
                                    @foreach (var parent in menuModels)
                                    {
                                        <div class="col-md-12 mb-3 border rounded p-3">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" @bind="parent.IsChecked" id="menu_@parent.MID" />
                                                <label class="form-check-label fw-bold" for="menu_@parent.MID">@parent.MenuName</label>
                                            </div>

                                            @if (parent.SubMenus != null && parent.SubMenus.Count > 0)
                                            {
                                                <div class="ms-4 mt-2">
                                                    @foreach (var child in parent.SubMenus)
                                                    {
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" @bind="child.IsChecked" id="submenu_@child.MID" />
                                                            <label class="form-check-label" for="submenu_@child.MID">@child.MenuName</label>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private List<Mst_Role> Roleslist = new();
    private List<MenuModel> menuModels = new();


    protected override async Task OnInitializedAsync()
    {
        using var dbContext = await DbFactory.CreateDbContextAsync();
        Roleslist = await dbContext.Mst_Role.Where(r => r.DeletedBy == null).ToListAsync();
        await GetMenuTree();
    }

    public async Task GetMenuTree()
    {
        menuModels = await MenuService.GetMenuTreeAsync();
    }
}
