@page "/menu"
@attribute [Authorize]
@layout MainLayout
@inject IDbContextFactory<EMSContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Menu</PageTitle>

<div class="row">
	<div class="col-md-4">
		<div class="card">
			<div class="card-header">
				<h3>Create Menu</h3>
			</div>
			<div class="card-body">
				<EditForm Model="menu">
					<FluentValidationValidator />
					<div class="form-group">
						<label>Menu Name</label>
						<InputText class="form-control" placeholder="Menu Name" @bind-Value="menu.MenuName"></InputText>
						<ValidationMessage For="@(() => menu.MenuName)" />
					</div>
					<div class="form-group">
						<label>Menu URL</label>
						<InputText class="form-control" placeholder="Menu Url" @bind-Value="menu.MenuUrl"></InputText>
						<ValidationMessage For="@(() => menu.MenuUrl)" />
					</div>
					<div class="form-group">
						<label>Menu Description</label>
						<InputText class="form-control" placeholder="Menu Description" @bind-Value="menu.MenuDesc"></InputText>
					</div>
					<div class="form-group">
						<label>Menu Sort Order</label>
						<InputText class="form-control" placeholder="Menu Sort Order" @bind-Value="MenuSortOrder"></InputText>
					</div>
				</EditForm>
			</div>
		</div>
	</div>
	<div class="col-md-8">
		<div class="card">
			<div class="card-header">
				<h3>Menu List</h3>
			</div>
			<div class="card-body">
				@if (MenuList == null)
				{
					<p><em>Loading...</em></p>
				}
				else
				{
					<table class="table table-bordered border-3 border-black">
						<thead>
							<tr>
								<th>Menu Name</th>
								<th>Menu URL</th
								<th>Action</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var menu in MenuList)
							{
								<tr>
									<td>@menu.MenuName</td>
									<td>@menu.MenuUrl</td>
									<td>
										<a class="btn btn-sm btn-primary"><i class="fa-solid fa-pen"></i></a>
										<a class="btn btn-sm btn-danger"><i class="fa-solid fa-trash"></i></a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				}
			</div>
		</div>
		
	</div>
</div>
<ConfirmationModal Show="@ShowConfirmDialog"
               Title="Delete Department"
               Message="Are you sure you want to delete this department?" />

@code {
	private List<Mst_Menu> MenuList = new List<Mst_Menu>();
	private Mst_Menu menu = new();
	private string? MenuSortOrder;
	private bool ShowConfirmDialog { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		await LoadMenuList();
	}

	private async Task LoadMenuList()
	{
		using var Db = DbFactory.CreateDbContext();
		MenuList = await Db.Mst_Menu.Where(m => m.DeletedBy == null).OrderBy(m => m.MID).ToListAsync();
	}
}
