@page "/department"
@layout MainLayout
@attribute [Authorize]
@inject EMSContext Db
@inject IJSRuntime JS
@inject ModalServices ModalService
@inject Blazored.Toast.Services.IToastService ToastService
@rendermode InteractiveServer

<PageTitle>Department</PageTitle>

<div class="row">
	<div class="col-md-6">
		<h3>Department</h3>
	</div>
	<div class="row">
		<div class="col-md-6" style="text-align:right">
            <button href="#" class="btn btn-success mb-3" @onclick="OpenAddModal">
				<i class="fa-solid fa-plus"></i> Add Department
			</button>
		</div>
	</div>
</div>
@if (departmentlist == null)
{
	<p><em>Loading...</em></p>
}
<div class="row">
	<div class="col-12">
		<table class="table table-bordered border-black">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Department Name</th>
                    <th>Is Active</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var department in departmentlist)
                {
                    <tr>
                        <td>@department.Id</td>
                        <td>@department.DepartmentName</td>
                        <td>
                            <input type="checkbox" @bind="department.IsActive" disabled />
                        </td>
                        <td>
                            <a class="btn btn-sm btn-primary"><i class="fa-solid fa-pen"></i></a>
                            <a class="btn btn-sm btn-danger"><i class="fa-solid fa-trash"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
		</table>
	</div>
</div>
<!-- Bootstrap Modal -->
<div class="modal fade" id="departmentModal" tabindex="-1" aria-labelledby="departmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="departmentModalLabel">Add Department</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input class="form-control mb-2" placeholder="Department Name" @bind="newDepartment.DepartmentName" />
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" @bind="newDepartment.IsActive" />
                    <label class="form-check-label">Is Active</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" @onclick="SaveDepartment">Save</button>
            </div>
        </div>
    </div>
</div>


@code {
    private List<Mst_Department> departmentlist = new List<Mst_Department>();
    private Mst_Department newDepartment = new();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        departmentlist = await Db.Mst_Department.Where(d => d.DeletedBy == null).ToListAsync();
    }

    #region commented code
    // private async Task SaveDepartment()
    // {
    //     Db.Mst_Department.Add(newDepartment);
    //     await Db.SaveChangesAsync();

    //     departmentlist = await Db.Mst_Department.ToListAsync(); // refresh list
    //     newDepartment = new Mst_Department(); // reset form

    //     // Close the modal
    //     await JS.InvokeVoidAsync("closeModal", "addDepartmentModal");
    // }
    #endregion

    private async Task OpenAddModal()
    {
        await ModalService.ShowAsync("departmentModal");
    }

    private async Task SaveDepartment()
    {
        
        ToastService.ShowSuccess("Department saved successfully!");

        await ModalService.HideAsync("departmentModal");
        newDepartment = new(); // reset form
    }
}
